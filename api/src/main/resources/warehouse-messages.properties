# exception
warehouse-bay.already.exists.exception=이미 존재합니다
warehouse-bay.code.already.exists.exception=이미 존재하는 코드 입니다
warehouse-bay.not.found.exception=찾을 수 없습니다
warehouse-level.already.exists.exception=이미 존재합니다
warehouse-level.code.already.exists.exception=이미 존재하는 코드 입니다
warehouse-level.not.found.exception=찾을 수 없습니다 
warehouse-rack.already.exists.exception=이미 존재합니다
warehouse-rack.code.already.exists.exception=이미 존재하는 코드 입니다
warehouse-rack.not.found.exception=찾을 수 없습니다
warehouse-site.already.exists.exception=이미 존재합니다
warehouse-site.code.already.exists.exception=이미 존재하는 코드 입니다
warehouse-site.not.found.exception=찾을 수 없습니다
warehouse-zone.already.exists.exception=이미 존재합니다
warehouse-zone.code.already.exists.exception=이미 존재하는 코드 입니다
warehouse-zone.not.found.exception=찾을 수 없습니다
warehouse-station.already.exists.exception=이미 존재합니다
warehouse-station.code.already.exists.exception=이미 존재하는 코드 입니다
warehouse-station.not.found.exception=찾을 수 없습니다
warehouse-location.already.exists.exception=이미 존재합니다
warehouse-location.code.already.exists.exception=이미 존재하는 코드 입니다
warehouse-location.not.found.exception=찾을 수 없습니다
warehouse-pack.already.exists.exception=이미 존재합니다
warehouse-pack.code.already.exists.exception=이미 존재하는 코드 입니다
warehouse-pack.cannot.select.exception=팩을 선정 할 수 없습니다
warehouse-pack.not.found.exception=찾을 수 없습니다
warehouse-transaction.already.exists.exception=이미 존재합니다
warehouse-transaction.not.found.exception=찾을 수 없습니다
warehouse-transaction-order.already.exists.exception=이미 존재합니다
warehouse-transaction-order.code.already.exists.exception=이미 존재하는 코드 입니다
warehouse-transaction-order.cannot.modify.exception=수정 할 수 없습니다
warehouse-transaction-order.cannot.commit.exception=제출 할 수 없습니다
warehouse-transaction-order.cannot.cancel.exception=취소 할 수 없습니다
warehouse-transaction-order.cannot.accept.exception=접수 할 수 없습니다
warehouse-transaction-order.cannot.complete.exception=완료 할 수 없습니다
warehouse-transaction-order.not.found.exception=찾을 수 없습니다
warehouse-transaction-order-item.already.exists.exception=이미 존재합니다
warehouse-transaction-order-item.cannot.create.exception=생성 할 수 없습니다
warehouse-transaction-order-item.cannot.update.exception=변경 할 수 없습니다
warehouse-transaction-order-item.cannot.delete.exception=삭제 할 수 없습니다
warehouse-transaction-order-item.not.found.exception=찾을 수 없습니다
warehouse-transaction-order-item-lot.already.exists.exception=이미 존재합니다
warehouse-transaction-order-item-lot.cannot.create.exception=생성 할 수 없습니다
warehouse-transaction-order-item-lot.cannot.update.exception=변경 할 수 없습니다
warehouse-transaction-order-item-lot.cannot.delete.exception=삭제 할 수 없습니다
warehouse-transaction-order-item-lot.not.found.exception=찾을 수 없습니다
warehouse-transaction-order-pack.already.exists.exception=이미 존재합니다
warehouse-transaction-order-pack.cannot.create.exception=생성 할 수 없습니다
warehouse-transaction-order-pack.cannot.update.exception=변경 할 수 없습니다
warehouse-transaction-order-pack.cannot.delete.exception=삭제 할 수 없습니다
warehouse-transaction-order-pack.not.found.exception=찾을 수 없습니다
warehouse-transaction-request.code.already.exists.exception=이미 존재하는 코드 입니다
warehouse-transaction-request.already.exists.exception=이미 존재합니다
warehouse-transaction-request.cannot.modify.exception=수정 할 수 없습니다
warehouse-transaction-request.cannot.commit.exception=제출 할 수 없습니다
warehouse-transaction-request.cannot.cancel.exception=취소 할 수 없습니다
warehouse-transaction-request.cannot.accept.exception=접수 할 수 없습니다
warehouse-transaction-request.cannot.complete.exception=완료 할 수 없습니다
warehouse-transaction-request.not.found.exception=찾을 수 없습니다
warehouse-transaction-request-item.already.exists.exception=이미 존재합니다
warehouse-transaction-request-item.cannot.create.exception=생성 할 수 없습니다
warehouse-transaction-request-item.cannot.update.exception=변경 할 수 없습니다
warehouse-transaction-request-item.cannot.delete.exception=삭제 할 수 없습니다
warehouse-transaction-request-item.not.found.exception=찾을 수 없습니다
warehouse-transaction-request-item-lot.already.exists.exception=이미 존재합니다
warehouse-transaction-request-item-lot.cannot.create.exception=생성 할 수 없습니다
warehouse-transaction-request-item-lot.cannot.update.exception=변경 할 수 없습니다
warehouse-transaction-request-item-lot.cannot.delete.exception=삭제 할 수 없습니다
warehouse-transaction-request-item-lot.not.found.exception=찾을 수 없습니다
# enum
pico.erp.warehouse.pack.PackStatusKind.EMPTY=미적재
pico.erp.warehouse.pack.PackStatusKind.STOCKED=적재
pico.erp.warehouse.pack.PackStatusKind.AWAITING_INBOUND=입고대기
pico.erp.warehouse.pack.PackStatusKind.AWAITING_OUTBOUND=출고대기
pico.erp.warehouse.transaction.order.pack.TransactionOrderPackStatusKind.INBOUND_READY=입고준비
pico.erp.warehouse.transaction.order.pack.TransactionOrderPackStatusKind.INBOUND_COMPLETED=입고완료
pico.erp.warehouse.transaction.order.pack.TransactionOrderPackStatusKind.OUTBOUND_READY=출고준비
pico.erp.warehouse.transaction.order.pack.TransactionOrderPackStatusKind.OUTBOUND_COMPLETED=출고완료
pico.erp.warehouse.transaction.order.TransactionOrderStatusKind.CREATED=작성중
pico.erp.warehouse.transaction.order.TransactionOrderStatusKind.COMMITTED=제출완료
pico.erp.warehouse.transaction.order.TransactionOrderStatusKind.CANCELED=취소
pico.erp.warehouse.transaction.order.TransactionOrderStatusKind.ACCEPTED=접수
pico.erp.warehouse.transaction.order.TransactionOrderStatusKind.COMPLETED=완료
pico.erp.warehouse.transaction.request.TransactionRequestStatusKind.CREATED=작성중
pico.erp.warehouse.transaction.request.TransactionRequestStatusKind.COMMITTED=제출완료
pico.erp.warehouse.transaction.request.TransactionRequestStatusKind.CANCELED=취소
pico.erp.warehouse.transaction.request.TransactionRequestStatusKind.ACCEPTED=접수
pico.erp.warehouse.transaction.request.TransactionRequestStatusKind.COMPLETED=완료
pico.erp.warehouse.transaction.TransactionQuantityCorrectionPolicyKind.NEGATIVE=보정 불가
pico.erp.warehouse.transaction.TransactionQuantityCorrectionPolicyKind.NEGATIVE.description=수량이 정확히 일치하지 않으면 진행되지 않습니다
pico.erp.warehouse.transaction.TransactionQuantityCorrectionPolicyKind.ROUND_UP=초과 보정
pico.erp.warehouse.transaction.TransactionQuantityCorrectionPolicyKind.ROUND_UP.description=수량이 정확히 일치하지 않으면 요청 수량보다 초과 수량을 진행합니다
pico.erp.warehouse.transaction.TransactionQuantityCorrectionPolicyKind.ROUND_DOWN=미만 보정
pico.erp.warehouse.transaction.TransactionQuantityCorrectionPolicyKind.ROUND_DOWN.description=수량이 정확히 일치하지 않으면 요청 수량보다 미만 수량을 진행합니다
pico.erp.warehouse.transaction.TransactionTypeKind.INBOUND=입고
pico.erp.warehouse.transaction.TransactionTypeKind.OUTBOUND=출고

# field
# TODO: 도메인 객체의 필드 메세지 추가해야 함
# menu & role
pico.erp.warehouse.WarehouseApi.Roles.WAREHOUSE_MANAGER=창고 관리자
pico.erp.warehouse.WarehouseApi.Roles.WAREHOUSE_MANAGER.description=설비를 생성/수정 할 수 있는 권한
pico.erp.warehouse.WarehouseApi.Roles.WAREHOUSE_ACCESSOR=창고 접근자
pico.erp.warehouse.WarehouseApi.Roles.WAREHOUSE_ACCESSOR.description=설비를 조회 할 수 있는 권한
pico.erp.warehouse.WarehouseApi.Roles.WAREHOUSE_WORKER=창고 작업자
pico.erp.warehouse.WarehouseApi.Roles.WAREHOUSE_WORKER.description=창고에서 입/출고를 진행하는 작업자의 권한
pico.erp.warehouse.WarehouseApi.Roles.WAREHOUSE_TRANSACTION_REQUESTER=창고 입/출고 요청자
pico.erp.warehouse.WarehouseApi.Roles.WAREHOUSE_TRANSACTION_REQUESTER.description=창고에서 입/출고를 요청할 수 있는 권한


